import React from 'react';
import { Heart, Plus } from 'lucide-react';
import { useApp } from '../../context/AppContext';
import { useVenues } from '../../hooks/useVenues';

const FollowButton = ({ venue, size = 'sm', showText = false }) => {
  const { actions } = useApp();
  const { isVenueFollowed } = useVenues();
  const isFollowed = isVenueFollowed(venue.id);

  const sizes = {
    sm: 'w-8 h-8',
    md: 'w-10 h-10',
    lg: 'w-12 h-12'
  };

  const iconSizes = {
    sm: 'w-3 h-3',
    md: 'w-4 h-4',
    lg: 'w-5 h-5'
  };

  const handleClick = (e) => {
    e.stopPropagation();
    actions.toggleVenueFollow(venue.id);
    
    const message = isFollowed
      ? `üíî Unfollowed ${venue.name}`
      : `‚ù§Ô∏è Now following ${venue.name}`;
    
    actions.addNotification({
      type: 'success',
      message,
      duration: 3000
    });
  };

  if (showText) {
    return (
      <button
        onClick={handleClick}
        className={`follow-button-text ${isFollowed ? 'followed' : ''}`}
      >
        {isFollowed ? (
          <>
            <Heart className={`${iconSizes[size]} fill-current`} />
            <span>Following</span>
          </>
        ) : (
          <>
            <Plus className={iconSizes[size]} />
            <span>Follow</span>
          </>
        )}
      </button>
    );
  }

  return (
    <button
      onClick={handleClick}
      className={`follow-button ${sizes[size]} ${isFollowed ? 'followed' : ''}`}
      title={isFollowed ? `Unfollow ${venue.name}` : `Follow ${venue.name}`}
    >
      {isFollowed ? (
        <Heart className={`${iconSizes[size]} fill-current`} />
      ) : (
        <Plus className={iconSizes[size]} />
      )}
    </button>
  );
};

export default FollowButton;
